[BepInEx]

## convert BepInEx loggers to async
# Setting type: Boolean
# Default value: true
enabled = true

## convert BepInEx disk logger to async
# Setting type: Boolean
# Default value: true
disk_wrapper = true

## convert BepInEx console logger to async
# Setting type: Boolean
# Default value: true
console_wrapper = true

## convert BepInEx unity logger to async
# Setting type: Boolean
# Default value: true
unity_wrapper = true

## scheduler type to use ( Thread/Job )
# Setting type: AsyncType
# Default value: Thread
# Acceptable values: Thread, Job
scheduler = Thread

[DbLogger]

## flush logs to a Sqlite database
# Setting type: Boolean
# Default value: true
enabled = true

## how big the file can grow before it is rotated ( in bytes )
# Setting type: Int64
# Default value: 100000000
rotation_size = 100000000

[Scheduler]

## maximum size of the log queue for the Job Scheduler ( only one Job scheduler exists! )
# Setting type: UInt32
# Default value: 1024
job_buffer_size = 1024

## maximum size of the log queue for the Threaded Scheduler ( each logger has a separate one )
# Setting type: UInt32
# Default value: 500
thread_buffer_size = 500

## close immediately or wait for all logs to be written ( Instant/Await ) 
# Setting type: ShutdownType
# Default value: Await
# Acceptable values: Instant, Await
shutdown_type = Await

[Timestamps]

## add numeric timestamps to the logs
# Setting type: Boolean
# Default value: true
enabled = true

## what kind of timestamps to use
# Setting type: TimestampType
# Default value: DateTime
# Acceptable values: DateTime, TickCount, Counter
type = DateTime

[Unity]

## convert unity logger to async
# Setting type: Boolean
# Default value: true
enabled = true

## wrapper type to use ( Logger/LogHandler )
# Setting type: UnityWrapperType
# Default value: Logger
# Acceptable values: Logger, LogHandler
wrapper = Logger

## scheduler type to use ( Thread/Job )
# Setting type: AsyncType
# Default value: Job
# Acceptable values: Thread, Job
scheduler = Job

